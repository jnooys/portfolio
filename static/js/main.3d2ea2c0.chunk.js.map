{"version":3,"sources":["reducer/index.js","context/index.js","components/Header.js","components/Skeleton/index.js","components/ProjectItem.js","components/ProjectList.js","components/Main.js","components/Footer.js","components/Modal.js","App.js","serviceWorker.js","index.js"],"names":["initialState","originProject","sortedProject","sortCategory","sortYear","imagePath","item","loading","activeCategory","LOAD_DATA","OPEN_ITEM","CLOSE_ITEM","ACTIVE_CATEGORY","SORT_PROJECT","loadData","type","openItem","toggleCategory","active","sortProject","project","reducer","state","action","DispatchProvider","createContext","StateProvider","useStateContext","context","useContext","Error","useReducerContext","value","children","Provider","dispatch","Header","useState","openCategory","setOpenCategory","onToggleCateogry","useCallback","e","preventDefault","onClickCategory","id","category","console","log","find","v","filter","sort","a","b","window","scrollTo","className","href","onClick","width","height","viewBox","x","y","map","name","Skeleton","memo","shape","style","ProjectItem","setLoading","title","subtitle","date","url","imageURL","thumbnail","useEffect","image","Image","onload","src","onClickItem","html","document","querySelector","body","overflowY","openModal","paddingTop","marginBottom","alt","target","rel","ProjectList","index","prevProps","nextProps","Main","year","proj","slice","Footer","Modal","mainDev","info","images","pages","imagePromise","Promise","resolve","reject","onerror","all","then","onClickClose","closeModal","onClickMove","moveIndex","buttonType","dataset","move","nowIndex","indexOf","lastIndex","length","page","data-move","App","useReducer","fetchApiData","fetch","res","json","data","reduce","push","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3d2ea2c0.chunk.js","sourcesContent":["export const initialState = {\n  originProject: [],\n  sortedProject: [],\n  sortCategory: [],\n  sortYear: [],\n  imagePath: 'https://rongchyo.cafe24.com/resources/images/thumbnail/',\n  item: false,\n  loading: true,\n  activeCategory: false,\n};\n\nexport const openModal = () => {\n  const html = document.querySelector('html');\n  const body = document.querySelector('body');\n  html.style.overflowY = 'hidden';\n  body.style.overflowY = 'scroll';\n};\n\nexport const closeModal = () => {\n  const html = document.querySelector('html');\n  const body = document.querySelector('body');\n  html.style.overflowY = '';\n  body.style.overflowY = '';\n};\n\nconst LOAD_DATA = 'LOAD_DATA';\nconst OPEN_ITEM = 'OPEN_ITEM';\nconst CLOSE_ITEM = 'CLOSE_ITEM';\nconst ACTIVE_CATEGORY = 'ACTIVE_CATEGORY';\nconst SORT_PROJECT = 'SORT_PROJECT';\n\nexport const loadData = ({ originProject, sortCategory, sortYear, loading }) => ({\n  type: LOAD_DATA,\n  originProject,\n  sortCategory,\n  sortYear,\n  loading,\n});\n\nexport const openItem = (item) => ({\n  type: OPEN_ITEM,\n  item,\n});\n\nexport const closeItem = () => ({\n  type: OPEN_ITEM,\n});\n\nexport const toggleCategory = (active) => ({\n  type: ACTIVE_CATEGORY,\n  activeCategory: active,\n});\n\nexport const sortProject = (project) => ({\n  type: SORT_PROJECT,\n  sortedProject: project,\n});\n\nexport const reducer = (state = initialState, action) => {\n  switch(action.type) {\n    case LOAD_DATA:\n      return  {\n        ...state,\n        originProject: action.originProject,\n        sortedProject: [...action.originProject],\n        sortCategory: action.sortCategory,\n        sortYear: action.sortYear,\n        loading: action.loading,\n      }\n    case OPEN_ITEM: {\n      return {\n        ...state,\n        item: action.item,\n      }\n    }\n    case CLOSE_ITEM: {\n      return {\n        ...state,\n        item: false,\n      }\n    }\n    case ACTIVE_CATEGORY: {\n      return {\n        ...state,\n        activeCategory: action.activeCategory,\n      }\n    }\n    case SORT_PROJECT: {\n      return {\n        ...state,\n        sortedProject: action.sortedProject,\n      }\n    }\n    default:\n      return state;\n  }\n};","import React, { createContext, useContext } from 'react';\n\nconst DispatchProvider = createContext();\nconst StateProvider = createContext();\n\nexport const useStateContext = () => {\n  const context = useContext(StateProvider);\n  if (!context) {\n    throw new Error('Cannot find StateProvider');\n  }\n  return context;\n};\n\nexport const useReducerContext = () => {\n  const context = useContext(DispatchProvider);\n  if (!context) {\n    throw new Error('Cannot find DispatchProvider');\n  }\n  return context;\n};\n\nconst context = ({ value, children }) => {\n  return (\n    <StateProvider.Provider value={value.state}>\n      <DispatchProvider.Provider value={value.dispatch}>{children}</DispatchProvider.Provider>\n    </StateProvider.Provider>\n  );\n};\n\nexport default context;\n","import React, { useCallback, useState } from 'react';\nimport { useStateContext, useReducerContext} from '../context';\nimport { toggleCategory, sortProject } from '../reducer';\n\nconst Header = () => {\n  const { activeCategory, sortCategory, originProject } = useStateContext();\n  const [openCategory, setOpenCategory] = useState(false);\n  const dispatch  = useReducerContext();\n\n  const onToggleCateogry = useCallback((e) => {\n    e.preventDefault();\n    if(openCategory) {\n      dispatch(sortProject([...originProject]));\n      dispatch(toggleCategory(false));\n    }\n    setOpenCategory(!openCategory);\n  }, [dispatch, openCategory, originProject]);\n \n  const onClickCategory = useCallback((id, e) => {\n    e.preventDefault();\n    let category;\n    let project;\n    console.log(activeCategory);\n    if(activeCategory.id === id) {\n      category = false;\n      project = [...originProject];\n    } else {\n      category = sortCategory.find(v => v.id === id);\n      project = originProject.filter((v) => !id ? v.id : v.id === id).sort((a, b) => a.id < b.id);\n    }\n\n    dispatch(sortProject(project));\n    dispatch(toggleCategory(category));\n\n    window.scrollTo(0, 0);\n  }, [activeCategory, dispatch, originProject, sortCategory]);\n\n  return (\n    <>\n      <header id=\"header\" className={openCategory ? 'open' : ''}>\n        <div className=\"container\">\n          <h1><a href=\"/portfolio\">seoyoon jung</a></h1>\n          <div className=\"category_wrap\">\n            <h2>\n              <a href=\"#n\" onClick={onToggleCateogry}>\n                <svg width=\"200\" height=\"200\" viewBox=\"0 0 200 200\">\n                  <g>\n                    <rect x=\"0\" y=\"0\" width=\"80\" height=\"80\"/>\n                    <rect x=\"120\" width=\"80\" height=\"80\"/>\n                    <rect y=\"120\" width=\"80\" height=\"80\"/>\n                    <rect x=\"120\" y=\"120\" width=\"80\" height=\"80\"/>\n                  </g>\n                </svg>\n              </a>\n            </h2>\n            {\n              openCategory && \n              <ul>\n                {sortCategory.map((v) => <li key={v.id} className={activeCategory.id === v.id ? 'active': ''}><a href=\"#n\" onClick={(e) => onClickCategory(v.id, e)}>{v.name}</a></li>)}\n              </ul>\n            }\n          </div>\n        </div>\n      </header>\n    </>\n  )\n};\n\nexport default Header;","import React, { memo} from 'react';\nimport './style.scss';\n\nconst Skeleton = memo(({shape, width = '100%', height, style}) => {\n  return (\n    <span className={`skeleton ${shape}`} style={{width, height, ...style}}></span>\n  )\n});\n\nexport default Skeleton;\n","import React, { memo, useEffect, useState, useCallback } from 'react';\nimport { useStateContext, useReducerContext } from '../context';\nimport { openItem, openModal } from '../reducer';\nimport Skeleton from './Skeleton';\n\nconst ProjectItem = memo(({ item }) => {\n  const { imagePath } = useStateContext();\n  const [loading, setLoading] = useState(true);\n  const dispatch = useReducerContext();\n  const { title, subtitle, date, url, thumbnail } = item;\n  const imageURL = imagePath + thumbnail;\n\n  useEffect(() => {\n    if (!imageURL) return;\n    const image = new Image();\n\n    image.onload = () => {\n      setLoading(false);\n    };\n    image.src = imageURL;\n  }, [imageURL]);\n\n  const onClickItem = useCallback(\n    (item) => {\n      openModal();\n      dispatch(openItem(item));\n    },\n    [dispatch],\n  );\n\n  return (\n    <>\n      <li>\n        {loading ? (\n          <>\n            <Skeleton style={{ paddingTop: '70%', marginBottom: '5%' }} />\n            <Skeleton height='2em' style={{ marginBottom: '2%' }} />\n            <Skeleton width='60%' height='1em' />\n          </>\n        ) : (\n          <>\n            <img src={imageURL} alt={title} />\n            <div>\n              <div className='info'>\n                <span className='title'>{title}</span>\n                <span className='subtitle'>{subtitle}</span>\n                <span className='date'>{date}</span>\n              </div>\n              <div className='anchor'>\n                <a href={url} target='_blank' rel='noopener noreferrer' className='btn link'>\n                  link\n                </a>\n                <button type='button' className='btn detail' onClick={() => onClickItem(item)}>\n                  details\n                </button>\n              </div>\n            </div>\n          </>\n        )}\n      </li>\n    </>\n  );\n});\n\nexport default ProjectItem;\n","import React, { memo } from 'react';\nimport ProjectItem from './ProjectItem';\n\nconst ProjectList = memo(({ title, project }) => {\n  return (\n    <article>\n      <div className=\"container\">\n        <h1>{title}</h1>\n        <ul>\n          {\n            project.map((item, index) => \n              <ProjectItem item={item} key={item.id+index} />\n            )\n          }\n        </ul>\n      </div>\n    </article>\n  )\n}, (prevProps, nextProps) => prevProps.title === nextProps.title);\n\nexport default ProjectList;","import React from 'react';\nimport { useStateContext } from '../context';\nimport ProjectList from './ProjectList';\n\nconst Main = () => {\n  const { sortedProject, sortYear, sortCategory, activeCategory } = useStateContext();\n  \n  return (\n    <main>\n      { \n        activeCategory ?\n        sortCategory.filter(v => !activeCategory.id ? v.id : v.id === activeCategory.id).map((category) => \n        <ProjectList title={category.name}\n          project={sortedProject.filter(v => v.id === category.id)}\n          key={category.id}\n        /> \n        )\n        : sortYear.map(year =>\n          <ProjectList title={year} \n            project={sortedProject.filter(proj => proj.date.slice(0, 4) * 1 === year)} \n            key={year} />\n        )\n      }\n    </main>\n  )\n}\n\nexport default Main;","import React, { memo } from 'react';\n\nconst Footer = memo(() => {\n  return (\n    <>\n      <footer>\n        <div className=\"container\">\n          <p>&copy; seoyoon jung All Rights Reserved. </p>\n        </div>\n      </footer>\n    </>\n  )\n})\n\nexport default Footer;","import React, { useState, useEffect, useCallback } from 'react';\nimport { useStateContext, useReducerContext} from '../context';\nimport {openItem, closeModal, closeItem } from '../reducer';\nimport Skeleton from './Skeleton';\n\nconst Modal = () => {\n\n  const { item, imagePath, sortedProject } = useStateContext();\n  const dispatch = useReducerContext();\n  const [ loading, setLoading ] = useState(true);\n  const { title, subtitle, url, mainDev, info, images, pages, date } = item;\n\n  useEffect(() => {\n    setLoading(true);\n    if(!images) return;\n\n    const imagePromise = images.map((v) => new Promise((resolve, reject) => {\n      const image = new Image();\n      image.onload = () => {\n        resolve(true);\n      };\n      image.onerror = () => {\n        reject();\n      };\n      image.src = imagePath+v;\n    }));\n\n    Promise.all(imagePromise).then(() => {\n      setLoading(false);\n    });\n    \n  }, [imagePath, images]);\n\n  const onClickClose = useCallback(() => {\n    closeModal();\n    dispatch(closeItem());\n  }, [dispatch]);\n\n  const onClickMove = useCallback((e) => {\n    const buttonType = e.target.dataset.move;\n    const nowIndex = sortedProject.indexOf(item);\n    const lastIndex = sortedProject.length - 1;\n    let moveIndex;\n    if(buttonType === 'prev') {\n      moveIndex = nowIndex === 0 ? lastIndex : nowIndex - 1;\n    } else if(buttonType === 'next') {\n      moveIndex = nowIndex === lastIndex ? 0 : nowIndex + 1;\n    }\n    dispatch(openItem(sortedProject[moveIndex]));\n  }, [sortedProject, item, dispatch]);\n\n  return (\n    <>\n      <article id=\"modal\">\n        <span className=\"dim\" onClick={onClickClose}></span>\n        <div className=\"modal_popup\">\n          <div>\n            <header>\n              <h1>{title}</h1>\n              <span className=\"subtitle\">{subtitle}</span>\n              <span className=\"date\">{date}</span>\n            </header>\n            <section>\n              <a href={url} target=\"_blank\" className=\"link\">{mainDev ? url : 'HTML페이지 바로가기'}</a>\n              {\n                pages && \n                <ul className=\"page\">\n                  {\n                    pages.map((page, index) => <li key={`page${index}`}><a href={page.url} target=\"_blank\">{page.name}</a></li>)\n                  }\n                </ul>\n              }\n              <ul className=\"info\">\n              {\n                info.map((info, index) => <li key={`info${index}`}>{info}</li>)\n              }\n              </ul>\n              <ul className=\"img\">\n              {\n                loading ? \n                <>\n                  <li><Skeleton style={{paddingTop:'120%'}} /></li>\n                  <li><Skeleton style={{paddingTop:'120%'}} /></li>\n                  <li><Skeleton style={{paddingTop:'120%'}} /></li>\n                </>\n                : \n                images.map((image, index) => <li key={`image${index}`}><span className=\"screenshot\"><img src={imagePath+image} alt={`${title} ${subtitle}`} /></span></li>)                \n              }\n              </ul>\n            </section>\n          </div>\n          <button type=\"button\" className=\"close\" onClick={onClickClose}><span></span><span></span></button>\n        </div>\n        <button type=\"button\" className=\"move prev\" data-move=\"prev\" onClick={onClickMove}><span></span><span></span></button>\n        <button type=\"button\" className=\"move next\" data-move=\"next\" onClick={onClickMove}><span></span><span></span></button>\n      </article>\n    </>\n  )\n};\n\nexport default Modal;","import React, { useEffect, useReducer } from 'react';\nimport { initialState, reducer, loadData } from './reducer';\nimport PortfolioProvider from './context';\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport Footer from './components/Footer';\nimport Modal from './components/Modal';\nimport './scss/App.scss';\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { item } = state;\n\n  useEffect(() => {\n    (async function () {\n      const fetchApiData = async (page) => {\n        const path = '/data/db.json';\n        const res = await fetch(path);\n        const data = await res.json();\n        return data[page];\n      };\n\n      const originProject = await fetchApiData('project');\n      const sortCategory = await fetchApiData('category');\n      const sortYear = originProject.reduce((a, v) => {\n        const year = v.date.slice(0, 4) * 1;\n        if (a.indexOf(year) === -1) {\n          a.push(year);\n        }\n        return a;\n      }, []);\n      dispatch(loadData({ originProject, sortCategory, sortYear, loading: false }));\n    })();\n  }, []);\n\n  return (\n    <PortfolioProvider value={{ state, dispatch }}>\n      <Header />\n      <Main />\n      <Footer />\n      {item && <Modal />}\n    </PortfolioProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
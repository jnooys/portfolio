{"version":3,"sources":["context/PortfolioContext.js","components/Header.js","components/Footer.js","components/WorkItem.js","components/WorkCategory.js","components/Modal.js","components/Loading.js","components/App.js","serviceWorker.js","index.js"],"names":["PortfolioContext","createContext","img_path","project","category","active","work","clickNav","openModal","closeModal","Header","memo","useContext","id","className","href","map","cate","index","key","type","onClick","name","Footer","WorkItem","src","thumbnail","alt","title","subtitle","url","target","e","preventDefault","WorkCategory","Modal","mainDev","info","images","pages","moveModal","length","workIdx","indexOf","classList","contains","page","image","Loading","App","useState","setProject","loading","setLoading","setCategory","setActive","setWork","html","document","querySelector","body","useCallback","style","overflowY","useEffect","a","fetchApiData","fetch","res","json","data","projectData","categoryData","value","Provider","filter","proj","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.70dacf63.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const PortfolioContext = createContext({\n  img_path: '/images/thumbnail/',\n  project: [],\n  category: [],\n  active: {},\n  work: {},\n  clickNav: () => {},\n  openModal: () => {},\n  closeModal: () => {}\n});","import React, { memo, useContext } from 'react';\nimport { PortfolioContext } from '../context/PortfolioContext';\n\nconst Header = memo(() => {\n\n    const { category, active, clickNav } = useContext(PortfolioContext);\n    \n    return (\n        <>\n            <header id=\"header\">\n                <div className=\"container\">\n                    <h1><a href=\"/\">seoyoon jung</a></h1>\n                    <nav>\n                        <ul>\n                            {category.map((cate, index) => \n                                <li key={cate.id} className={(!active.id && index === 0 ) || active.id === cate.id ? 'active' : ''}><button type=\"button\" onClick={() => {clickNav(cate)}}>{cate.name}</button></li>\n                            )}\n                        </ul>\n                    </nav>\n                </div>\n            </header>\n        </>\n    )\n})\n\nexport default Header;","import React from 'react';\n\nconst Footer = () => {\n\n    return (\n        <>\n            <footer>\n                <div className=\"container\">\n                    <p>&copy; 2020 seoyoon jung All Rights Reserved. </p>\n                </div>\n            </footer>\n        </>\n    )\n}\n\nexport default Footer;","import React, { memo, useContext } from 'react';\nimport { PortfolioContext } from '../context/PortfolioContext';\n\nconst WorkItem = memo(({ work }) => {\n    \n    const { img_path, openModal } = useContext(PortfolioContext);\n\n    const onClickWork = e => {\n        e.preventDefault();\n        openModal(work);\n    } \n\n    return (\n        <>\n            <li>\n                <img src={img_path+work.thumbnail} alt={work.title} />\n                <div>\n                    <div className=\"info title\"><span>{work.title}</span></div>\n                    <div className=\"info subtitle\"><span>{work.subtitle}</span></div>\n                    <div className=\"anchor\">\n                        <a href={work.url} target=\"_blank\" className=\"btn link\">link</a>\n                        <button type=\"button\" className=\"btn detail\" onClick={onClickWork}>details</button>\n                    </div>\n                </div>\n            </li>\n        </>\n    )    \n})\n\nexport default WorkItem;","import React, { memo } from 'react';\nimport WorkItem from './WorkItem';\n\nconst WorkCategory = memo(({ title, project }) => {\n    return (\n        <article>\n            <div className=\"container\">\n                <h1>{title}</h1>\n                <ul>\n                    {\n                        project.map((work, index) => \n                            <WorkItem work={work} key={work.id+index} />\n                        )\n                    }\n                </ul>\n            </div>\n        </article>\n    )\n})\n\nexport default WorkCategory;","import React, { memo, useContext } from 'react';\nimport { PortfolioContext } from '../context/PortfolioContext';\n\nconst Modal = memo(() => {\n\n  const { project, work, img_path, closeModal, openModal }  = useContext(PortfolioContext);\n\n  const { title, subtitle, url, mainDev, info, images, pages } = work;\n\n  const moveModal = (e) => {\n\n    const length = project.length - 1;\n    let workIdx = project.indexOf(work);\n    \n    if(e.target.classList.contains('prev')){\n      workIdx = workIdx > 0 ?  workIdx - 1 : length;\n    } else {\n      workIdx = workIdx < length ? workIdx + 1 : 0;\n    }\n    openModal(project[workIdx]);\n  }\n\n  return (\n    <>\n      <article id=\"modal\">\n        <span className=\"dim\" onClick={closeModal}></span>\n        <div className=\"modal_popup\">\n          <div>\n            <header>\n              <h1>{title}</h1>\n              <span className=\"subtitle\">{subtitle}</span>\n            </header>\n            <section>\n              <a href={url} target=\"_blank\" className=\"link\">{mainDev ? url : 'HTML페이지 바로가기'}</a>\n              {\n                pages && \n                <ul className=\"page\">\n                  {\n                    pages.map((page, index) => <li key={`page${index}`}><a href={page.url} target=\"_blank\">{page.name}</a></li>)\n                  }\n                </ul>\n              }\n              <ul className=\"info\">\n              {\n                info.map((info, index) => <li key={`info${index}`}>{info}</li>)\n              }\n              </ul>\n              <ul className=\"img\">\n              {\n                images.map((image, index) => <li key={`image${index}`}><span><img src={img_path+image} alt={`${title} ${subtitle}`} /></span></li>)\n              }\n              </ul>\n            </section>\n          </div>\n          <button type=\"button\" className=\"close\" onClick={closeModal}><span></span><span></span></button>\n        </div>\n        <button type=\"button\" className=\"move prev\" onClick={moveModal}><span></span><span></span></button>\n        <button type=\"button\" className=\"move next\" onClick={moveModal}><span></span><span></span></button>\n      </article>\n    </>\n  )\n})\n\nexport default Modal;","import React from 'react';\n\nconst Loading = () => {\n  return (\n    <>\n      <div id=\"loading\"></div>\n    </>\n  )\n}\n\nexport default Loading;","import React, { useEffect, useState, useCallback } from 'react';\nimport '../scss/App.scss';\nimport Header from './Header';\nimport Footer from './Footer';\nimport WorkCategory from './WorkCategory';\nimport Modal from './Modal';\nimport Loading from './Loading';\nimport { PortfolioContext } from '../context/PortfolioContext';\n\nconst App = () => {\n  \n  const [project, setProject] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [category, setCategory] = useState([]);\n  const [active, setActive] = useState({});\n  const [work, setWork] = useState(false);\n\n  const img_path = '/images/thumbnail/';\n  const html = document.querySelector('html');\n  const body = document.querySelector('body');\n\n  const openModal = useCallback((work) => {\n    html.style.overflowY = 'hidden';\n    body.style.overflowY = 'scroll';\n\n    setWork(work);\n  }, []);\n\n  const closeModal = useCallback(() => {\n    html.style.overflowY = '';\n    body.style.overflowY = '';\n\n    setWork(null);\n  }, []);\n\n  const clickNav = useCallback((active) => {\n    setActive(active);\n  }, []);\n  \n  useEffect(() => {\n    (async function(){\n\n      const fetchApiData = async (page) => {\n        const path = '/data/db.json';\n        const res = await fetch(path);\n        const data = await res.json();\n        return data[page];\n      }\n      \n      const projectData = await fetchApiData('project');\n      const categoryData = await fetchApiData('category');\n      \n      setProject(projectData);\n      setCategory(categoryData);\n      setActive(categoryData[0]);\n      setLoading(false);\n\n    })();\n  }, []);\n\n  const value = { img_path, category, project, active, work, clickNav, closeModal, openModal };\n\n  return (\n    <>\n      <PortfolioContext.Provider value={value}>\n        <Header />\n        <main>\n          {loading && <Loading/>}\n\n          { \n            category.filter(cate => !active.id ? cate.id : active.id === cate.id).map(cate => \n              <WorkCategory title={cate.name} project={project.filter(proj => proj.id === cate.id)} key={cate.id} />\n            )\n          }\n        </main>\n\n        <Footer />\n        \n        { work && <Modal/> }\n      </PortfolioContext.Provider>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}